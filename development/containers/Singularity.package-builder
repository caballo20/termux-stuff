Bootstrap: docker
From: ubuntu:18.10

%help
Package build environment for Termux (https://termux.com).

Contains all necessary software, e.g. Android SDK and NDK, which
may be required for building packages.

Important: use container only in sandbox mode as it requires write
access. Alternatively you can try option "--writable-tmpfs", but
keep in mind that Termux build environment may eat more than 10 GB
of space.

%post
    export ANDROID_SDK_TOOLS_REVISION="4333796"
    export ANDROID_SDK_BUILD_TOOLS_VERSION="28.0.2"
    export ANDROID_NDK_VERSION="19b"
    export DEBIAN_FRONTEND="noninteractive"
    dpkg --add-architecture i386
    apt update && apt upgrade -yq
    apt install -yq --no-install-recommends \
        asciidoc asciidoctor autoconf automake bison build-essential curl \
        devscripts docbook-utils docbook-to-man ed flex g++-multilib gawk \
        gettext git gnome-common gnupg gtk-3-examples gtk-doc-tools gperf \
        help2man intltool jq libexpat1-dev libffi-dev libgc-dev libgdk-pixbuf2.0-dev \
        libgmp-dev libgtk-3-bin libglib2.0-dev libisl-dev libjpeg-dev \
        libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev \
        libsigsegv-dev libssl-dev libtool-bin libunistring-dev lzip m4 \
        openjdk-8-jdk-headless pax-utils pkg-config python-pip python3.7 \
        python3-docutils python3-pip python3-setuptools python3-sphinx ruby \
        scons texinfo unzip valac xfonts-utils xmlto zip zlib1g-dev
    apt install -yq --no-install-recommends \
        libssl-dev:i386 zlib1g-dev:i386
    apt install -yq --no-install-recommends \
        hexedit nano patchelf patchutils pax-utils silversearcher-ag
    curl --location --output micro-1.4.1.tar.gz \
        https://github.com/zyedidia/micro/releases/download/v1.4.1/micro-1.4.1-linux64.tar.gz
    tar xf micro-1.4.1.tar.gz && mv micro-1.4.1/micro /usr/local/bin/micro
    chown root:root /usr/local/bin/micro && chmod 755 /usr/local/bin/micro
    rm -rf micro-1.4.1 micro-1.4.1.tar.gz
    curl --location --output sdk.zip \
        https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS_REVISION}.zip
    unzip -q -d android-sdk sdk.zip && rm -f sdk.zip
    mv android-sdk /opt/
    echo y | /opt/android-sdk/tools/bin/sdkmanager "build-tools;${ANDROID_SDK_BUILD_TOOLS_VERSION}"
    echo y | /opt/android-sdk/tools/bin/sdkmanager "platforms;android-21"
    echo y | /opt/android-sdk/tools/bin/sdkmanager "platforms;android-24"
    echo y | /opt/android-sdk/tools/bin/sdkmanager "platforms;android-27"
    curl --location --output ndk.zip \
        https://dl.google.com/android/repository/android-ndk-r${ANDROID_NDK_VERSION}-Linux-x86_64.zip
    unzip -q ndk.zip && rm -f ndk.zip
    mv android-ndk-r${ANDROID_NDK_VERSION} /opt/android-ndk
    mkdir /data && chmod 777 /data
    mkdir /var/lib/termux-build && chmod 777 /var/lib/termux-build
    apt-get clean
    rm -rf /var/lib/apt/lists/*
    find /bin /etc /lib /lib32 /lib64 /libx32 /sbin /usr -type f -print0 | xargs -0 -r chmod a-w

%runscript
    export ANDROID_HOME=/opt/android-sdk
    export NDK=/opt/android-ndk
    export TERMUX_MAKE_PROCESSES=4
    export TERMUX_TOPDIR=/var/lib/termux-build
    exec /bin/bash -l

%startscript
    echo "Use command 'singularity run' to start container."
    exit 1
